1. What happens when you initialize a repository? Why do you need to do it?

A .git file is added that tracks meta data about your directory. This needs to be done in order to 
track changes throughout the history of the directory.




How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you more precise control over what files are being committed. The working directory is simply 
the current commit that you have checked out, and the repository is your directory with the .git folder.




How can you use the staging area to make sure you have one commit per logical change?

The staging area can be used to only add changes that are logically related.




What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be useful when trying to develop new features without breaking a currently working version of 
your program.




How do the diagrams help you visualize the branch structure?

The diagrams help to visualize the branch structure by being able to see
a commit's parent, and also where branches break off from their original 
lineage, so to speak. 




What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is combining the updated code from branch 1 into branch2. Then, creating a new commit to combine the two. 
