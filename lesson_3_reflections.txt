When would you want to use a remote repository rather than keeping all your work local?

You may be working from an office, but also working from home on the same project as well. 
Using a remote repository allows you to stay in sync across various work environments.





Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You might make changes to your code locally that isn't ready to be public yet. 
Likewise, changes may have been made to a remote repository that aren't in sync 
with the code that you're working on locally. For these reasons, you might want 
to push and pull changes manually, rather than having Github automatically update.




Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is copying a repo on Github, to another repo on Github. This is when you want to make changes to 
an existing repo, without needing permission from the author to be a contributor.

A clone is taking a repo and making a copy of it, usually from online to a local computer. This scenario
works well when you want others to have access to your work, or you want access to collaborate on a project.
Also, if you have more than one computer that you work from, cloning a project allows you to work on 
the same project from anywhere.

A branch refers to a commit to a repo that is saved somewhere other than the master. This might be used 
when implementing a new feature, or fixing a bug.




What is the benefit of having a copy of the last known state of the remote stored locally?

Having the last known state of the remote stored locally allows you to work on the latest 
version of a project while offline. 
